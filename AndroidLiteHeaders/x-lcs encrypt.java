    public static String k(byte[] bArr) {
        StringBuffer i = b.b.a.a.a.i("0008");
        if (((b.a.a.b.a.e.b) b.a.a.b.b.a.f()) != null) {
            PublicKey generatePublic = KeyFactory.getInstance("RSA").generatePublic(new RSAPublicKeySpec(new BigInteger("B0C0BA1C061E32AE11E7D7B6C91C3A5B53964F6B7D69EA62029E1F6D2097CD18FB036F41380140BCA97302E6F8A31375DCDB7C75B701F88080B9FC839CDE4D777FAF5E00F111767FB31DBFC2E15B0B70777AF48D291E2129CB3CD2CB91B3C68BE847968BE6C0536A1821CEFC05BAA1373C74582CD94896CC045C35565B14FC743F5DD894B9FA299794126B44B6E3A5D79B026699744ED2FEDB36FAF168D57471BBE21A43AF4E506DD7E45EAC8147313C374B02C39C23A8953CF70AE1395763AB3D90A60B49E598F473C147F1A31C6CFFAA8576964DA0E447FECE6641E9D2CAA3E4987F1304E9472563C7DDE37593A6992252B94B9E267146FFA0D451ABDC03D7", 16), new BigInteger("10001", 16)));
            Cipher instance = Cipher.getInstance("RSA/NONE/OAEPPadding");
            instance.init(1, generatePublic);
            i.append(b.a.a.b.a.e.a.b(instance.doFinal(bArr)));
            return i.toString();
        }
        throw null;
    }
